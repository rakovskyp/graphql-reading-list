{"ast":null,"code":"var _jsxFileName = \"/Users/Pesto/Desktop/code/graphql-library/client/src/components/BookList.js\";\nimport React from 'react'; // binds apollo to react\n\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\nimport BookDetails from './BookDetails';\n\nconst BookList = props => {\n  const [selected, setSelected] = React.useState(null);\n\n  function displayBooks() {\n    var {\n      data\n    } = props;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, \"Loading books...\");\n    } else {\n      return data.books.map(book => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          onClick: e => {\n            setSelected(book.id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }\n        }, book.name);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, displayBooks()), /*#__PURE__*/React.createElement(BookDetails, {\n    bookid: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n}; // integrate getBooksQuery to BookList by storing it in BookList's props\n\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/Pesto/Desktop/code/graphql-library/client/src/components/BookList.js"],"names":["React","graphql","getBooksQuery","BookDetails","BookList","props","selected","setSelected","useState","displayBooks","data","loading","books","map","book","id","e","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAhC;;AAEA,WAASC,YAAT,GAAwB;AACpB,QAAI;AAAEC,MAAAA;AAAF,QAAWL,KAAf;;AACA,QAAIK,IAAI,CAACC,OAAT,EAAkB;AACd,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR;AACH,KAFD,MAEO;AACH,aAAQD,IAAI,CAACE,KAAL,CAAWC,GAAX,CACHC,IAAD,IAAU;AACN,4BACI;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AACA,UAAA,OAAO,EAAGC,CAAD,IAAO;AAACT,YAAAA,WAAW,CAACO,IAAI,CAACC,EAAN,CAAX;AAAqB,WADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEED,IAAI,CAACG,IAFP,CADJ;AAKH,OAPG,CAAR;AASH;AACJ;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,YAAY,EADjB,CADJ,eAII,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEH,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CA5BD,C,CA8BA;;;AACA,eAAeL,OAAO,CAACC,aAAD,CAAP,CAAuBE,QAAvB,CAAf","sourcesContent":["import React from 'react'\n// binds apollo to react\nimport { graphql } from 'react-apollo'\n\nimport { getBooksQuery } from '../queries/queries'\n\nimport BookDetails from './BookDetails'\n\nconst BookList = (props) => {\n    const [selected, setSelected] = React.useState(null);\n\n    function displayBooks() {\n        var { data } = props;\n        if (data.loading) {\n            return (<div>Loading books...</div>)\n        } else {\n            return (data.books.map(\n                (book) => {\n                    return (\n                        <li key={book.id}\n                        onClick={(e) => {setSelected(book.id)}}\n                        >{book.name}</li>\n                    )\n                }\n            ))\n        }\n    }\n\n    return (\n        <div>\n            <ul id=\"book-list\">\n                {displayBooks()}\n            </ul>\n            <BookDetails bookid={selected}/>\n        </div>\n    )\n}\n\n// integrate getBooksQuery to BookList by storing it in BookList's props\nexport default graphql(getBooksQuery)(BookList);"]},"metadata":{},"sourceType":"module"}