{"ast":null,"code":"var _jsxFileName = \"/Users/Pesto/Desktop/code/graphql-library/client/src/components/BookList.js\";\nimport React from 'react'; // binds apollo to react\n\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\n\nconst BookList = props => {\n  function displayBooks() {\n    var data = props.getBooksQuery;\n    console.log(props); //     if (data.loading) {\n    //         return (<div>Loading books...</div>)\n    //     } else {\n    //         return (data.books.map(\n    //             (book) => {\n    //                 return (\n    //                     <li key={book.id}>{book.name}</li>\n    //                 )\n    //             }\n    //         ))\n    //     }\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, displayBooks());\n}; // integrate getBooksQuery to BookList by storing it in BookList's props\n\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/Pesto/Desktop/code/graphql-library/client/src/components/BookList.js"],"names":["React","graphql","getBooksQuery","BookList","props","displayBooks","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAGxB,WAASC,YAAT,GAAwB;AACpB,QAAIC,IAAI,GAAGF,KAAK,CAACF,aAAjB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAFoB,CAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AAED,sBACI;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,YAAY,EADjB,CADJ;AAKH,CAxBD,C,CA0BA;;;AACA,eAAeJ,OAAO,CAACC,aAAD,CAAP,CAAuBC,QAAvB,CAAf","sourcesContent":["import React from 'react'\n// binds apollo to react\nimport { graphql } from 'react-apollo'\n\nimport { getBooksQuery } from '../queries/queries'\n\nconst BookList = (props) => {\n\n\n    function displayBooks() {\n        var data = props.getBooksQuery;\n        console.log(props)\n    //     if (data.loading) {\n    //         return (<div>Loading books...</div>)\n    //     } else {\n    //         return (data.books.map(\n    //             (book) => {\n    //                 return (\n    //                     <li key={book.id}>{book.name}</li>\n    //                 )\n    //             }\n    //         ))\n    //     }\n    }\n\n    return (\n        <ul id=\"book-list\">\n            {displayBooks()}\n        </ul>\n    )\n}\n\n// integrate getBooksQuery to BookList by storing it in BookList's props\nexport default graphql(getBooksQuery)(BookList);"]},"metadata":{},"sourceType":"module"}