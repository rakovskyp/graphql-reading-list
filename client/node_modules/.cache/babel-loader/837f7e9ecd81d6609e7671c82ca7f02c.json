{"ast":null,"code":"var _jsxFileName = \"/Users/Pesto/Desktop/code/graphql-library/client/src/components/BookList.js\";\nimport React from 'react'; // binds apollo to react\n\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\n\nconst BookList = props => {\n  const [bookName, setBookName] = React.useState('');\n  const [bookGenre, setBookGenre] = React.useState('');\n  const [bookAuthor, setBookAuthor] = React.useState('');\n\n  function displayBooks() {\n    var {\n      data\n    } = props;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, \"Loading books...\");\n    } else {\n      return data.books.map(book => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }\n        }, book.name);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, displayBooks());\n}; // integrate getBooksQuery to BookList by storing it in BookList's props\n\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["/Users/Pesto/Desktop/code/graphql-library/client/src/components/BookList.js"],"names":["React","graphql","getBooksQuery","BookList","props","bookName","setBookName","useState","bookGenre","setBookGenre","bookAuthor","setBookAuthor","displayBooks","data","loading","books","map","book","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACO,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BX,KAAK,CAACO,QAAN,CAAe,EAAf,CAApC;;AAEA,WAASK,YAAT,GAAwB;AACpB,QAAI;AAAEC,MAAAA;AAAF,QAAWT,KAAf;;AACA,QAAIS,IAAI,CAACC,OAAT,EAAkB;AACd,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR;AACH,KAFD,MAEO;AACH,aAAQD,IAAI,CAACE,KAAL,CAAWC,GAAX,CACHC,IAAD,IAAU;AACN,4BACI;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBD,IAAI,CAACE,IAAxB,CADJ;AAGH,OALG,CAAR;AAOH;AACJ;;AAED,sBACI;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,YAAY,EADjB,CADJ;AAKH,CAzBD,C,CA2BA;;;AACA,eAAeX,OAAO,CAACC,aAAD,CAAP,CAAuBC,QAAvB,CAAf","sourcesContent":["import React from 'react'\n// binds apollo to react\nimport { graphql } from 'react-apollo'\n\nimport { getBooksQuery } from '../queries/queries'\n\nconst BookList = (props) => {\n    const [bookName, setBookName] = React.useState('')\n    const [bookGenre, setBookGenre] = React.useState('')\n    const [bookAuthor, setBookAuthor] = React.useState('')\n\n    function displayBooks() {\n        var { data } = props;\n        if (data.loading) {\n            return (<div>Loading books...</div>)\n        } else {\n            return (data.books.map(\n                (book) => {\n                    return (\n                        <li key={book.id}>{book.name}</li>\n                    )\n                }\n            ))\n        }\n    }\n\n    return (\n        <ul id=\"book-list\">\n            {displayBooks()}\n        </ul>\n    )\n}\n\n// integrate getBooksQuery to BookList by storing it in BookList's props\nexport default graphql(getBooksQuery)(BookList);"]},"metadata":{},"sourceType":"module"}