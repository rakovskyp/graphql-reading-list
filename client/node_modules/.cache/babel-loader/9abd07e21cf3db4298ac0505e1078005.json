{"ast":null,"code":"var _jsxFileName = \"/Users/Pesto/Desktop/code/graphql-library/client/src/components/BookDetails.js\";\nimport React from 'react'; // binds apollo to react\n\nimport { graphql } from 'react-apollo';\nimport { getBookQuery } from '../queries/queries';\n\nconst BookDetails = props => {\n  function displayBookDetails() {\n    const {\n      book\n    } = props.data;\n\n    if (book) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }, book.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }\n      }, book.genre), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, book.author.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, \" All books by this author in database: \"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"other-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }, book.author.books.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 41\n        }\n      }, item.name))));\n    } else {\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, \" No book selected\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"book-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, displayBookDetails());\n};\n\nexport default graphql(getBookQuery, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["/Users/Pesto/Desktop/code/graphql-library/client/src/components/BookDetails.js"],"names":["React","graphql","getBookQuery","BookDetails","props","displayBookDetails","book","data","name","genre","author","books","map","item","id","options","variables","bookId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,WAASC,kBAAT,GAA8B;AAC1B,UAAM;AAAEC,MAAAA;AAAF,QAAWF,KAAK,CAACG,IAAvB;;AAEA,QAAID,IAAJ,EAAU;AACN,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,IAAI,CAACE,IAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,KAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,IAAI,CAACI,MAAL,CAAYF,IAAjB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJJ,eAKI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQF,IAAI,CAACI,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CACIC,IAAI,iBAAI;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBD,IAAI,CAACL,IAAxB,CADZ,CAFR,CALJ,CADJ;AAeH,KAhBD,MAgBO;AACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,kBAAkB,EADvB,CADJ;AAKH,CA/BD;;AAoCA,eAAeJ,OAAO,CAACC,YAAD,EAAe;AACjCa,EAAAA,OAAO,EAAGX,KAAD,IAAW;AAChB,WAAO;AACHY,MAAAA,SAAS,EAAE;AACPF,QAAAA,EAAE,EAAEV,KAAK,CAACa;AADH;AADR,KAAP;AAKH;AAPgC,CAAf,CAAP,CAQZd,WARY,CAAf","sourcesContent":["import React from 'react'\n// binds apollo to react\nimport { graphql } from 'react-apollo'\n\nimport { getBookQuery } from '../queries/queries'\n\nconst BookDetails = (props) => {\n\n    function displayBookDetails() {\n        const { book } = props.data;\n\n        if (book) {\n            return (\n                <div>\n                    <h2>{ book.name }</h2>\n                    <p>{ book.genre }</p>\n                    <p>{ book.author.name }</p>\n                    <p> All books by this author in database: </p>\n                    <ul className='other-books'>\n                        {\n                            book.author.books.map(\n                                item => <li key={item.id}>{item.name}</li>\n                            )\n                        }\n                    </ul>\n                </div>\n            )\n        } else {\n            <div> No book selected</div>\n        }\n    }\n\n    return (\n        <div id=\"book-details\">\n            {displayBookDetails()}\n        </div>\n    )\n}\n\n\n\n\nexport default graphql(getBookQuery, {\n    options: (props) => {\n        return {\n            variables: {\n                id: props.bookId\n            }\n        }\n    }\n})(BookDetails);"]},"metadata":{},"sourceType":"module"}